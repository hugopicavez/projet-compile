-----------------------------------------------------
mettre default=runlex dans build.xml
----------------------------------------------------------
------Compilation build.xml-------------------
Buildfile: /home/user/Bureau/projet-compile/build.xml

compile:

jar:
      [jar] Building jar: /home/user/Bureau/projet-compile/tp-compilation.jar

runlex:
     [java] PROGRAM 1:0
     [java] BEGIN 2:0
     [java] NULL 3:0
     [java] POINT_VIRGULE 3:0
     [java] END 4:0
     [java] POINT 4:0
     [java] 

BUILD SUCCESSFUL
Total time: 0 seconds
------Exécution src/fr/esisar/compilation/syntaxe/compile.sh-------------------

JFlex ...

Reading "../../../../../input/lexical.flex"

Warning : Macro "EXP" has been declared but never used.

Warning : Macro "SEPARATEUR" has been declared but never used.

Warning : Macro "SIGNE" has been declared but never used.
Constructing NFA : 282 states in NFA
Converting NFA to DFA : 
.....................................................................................................................
119 states before minimization, 108 states in minimized DFA
Writing code to "../../../../../input/Lexical.java"

Cup ...


Compilation passe 1 ...

------Exécution lexico.sh-------------------
---------------------------------------------------------------------
Fichier : exemple.cas
---------------------------------------------------------------------
PROGRAM 1:0
IDF(t) 2:0
DEUX_POINTS 2:0
ARRAY 2:0
CROCH_OUVR 2:0
CONST_ENT(1) 2:0
DOUBLE_POINT 2:0
CONST_ENT(5) 2:0
CROCH_FERM 2:0
OF 2:0
ARRAY 2:0
CROCH_OUVR 2:0
CONST_ENT(1) 2:0
DOUBLE_POINT 2:0
CONST_ENT(10) 2:0
CROCH_FERM 2:0
OF 2:0
IDF(integer) 2:0
POINT_VIRGULE 2:0
IDF(i) 3:0
DEUX_POINTS 3:0
CONST_ENT(1) 3:0
DOUBLE_POINT 3:0
CONST_ENT(5) 3:0
POINT_VIRGULE 3:0
BEGIN 4:0
FOR 5:0
IDF(i) 5:0
AFFECT 5:0
CONST_ENT(1) 5:0
TO 5:0
CONST_ENT(5) 5:0
DO 5:0
IDF(t) 6:0
CROCH_OUVR 6:0
IDF(i) 6:0
CROCH_FERM 6:0
CROCH_OUVR 6:0
CONST_ENT(1) 6:0
CROCH_FERM 6:0
AFFECT 6:0
CONST_ENT(0) 6:0
POINT_VIRGULE 6:0
END 7:0
POINT_VIRGULE 7:0
WRITE 8:0
PAR_OUVR 8:0
CONST_CHAINE(ok) 8:0
PAR_FERM 8:0
POINT_VIRGULE 8:0
NEW_LINE 9:0
POINT_VIRGULE 9:0
END 10:0
POINT 10:0

---------------------------------------------------------------------
Appuyer sur Return
